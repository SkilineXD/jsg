<!--
Author: Gilzamir F. Gomes.
Publication Date: 25 de julho de 2013.
-->
<!DOCTYPE html>
<html>
<head>
	<title>JSGWEBGL - UMA BIBLIOTECA GR√ÅFICA PARA DESENVOLVEDORS JAVASCRIPT</title>
	<meta charset="UTF-8">
	<link href="style.css" rel="stylesheet" type="text/css" media="all">
	<script src="jsg.js" type="text/javascript"></script>
	<script src="jsg2d.js" type="text/javascript"></script>
	<script src="jquery.js" type="text/javascript"></script>
	<!--[if IE]>
	<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
	<script type="text/javascript">
		var jsg, jsg2d, gravity=-20, maxbols = 50, time = 0, step = 1/60, h;
		var bols = [];

		function init() {
			jsg = createJSGObject("banner");
			jsg2d = jsg.jsg2d;
			jsg.display = display;
			jsg.initialize = configure;
			
			jsg.mainLoop();

		}

		function firstScreen() {
			jsg2d.save();
			jsg2d.context.font="30px Verdana";
			var gradient=jsg2d.context.createLinearGradient(0,0,jsg.canvas.width,0);
			gradient.addColorStop("0.0","rgb(0, 0, 0)");
			gradient.addColorStop("0.5","rgb(255,255, 0)");
			gradient.addColorStop("1.0","rgb(0, 0, 255)");
				jsg2d.context.shadowColor = "red" // string
				jsg2d.context.shadowOffsetX = 0; // integer
				jsg2d.context.shadowOffsetY = 0; // integer
    				jsg2d.context.shadowBlur = 10; // integer				

			jsg2d.context.fillStyle = gradient;
			jsg2d.begin();
			jsg2d.fillText("JSGWEBGL, JSG2D, JSGVISION", 100, 540);
			jsg2d.end();
			jsg2d.fill();
		}

		function startGame() {
			for (var i = 0; i < bols.length; i++){
				var bol = bols[i];
				bol.update();
				bol.draw();
			}
			time += step;	
		}

		function configure(){
			h = jsg.canvas.height;
			for (var i = 0; i < maxbols; i++) {
				var bol = new Bol(10, [255, 0, 0], i);
				bol.y = h;
				bol.color[0] = Math.round(Math.random() * 256);
				bol.color[1] = Math.round(Math.random() * 256);
				bol.color[2]  = Math.round(Math.random() * 256);
				bol.v0 = -Math.random()*20;
				bol.x = Math.random()*jsg.canvas.width;
				bols.push(bol);
			}
			jsg.setBackground(5, 5, 5);
		}
	

		function genColor() {
			return Math.round(Math.random() * 256);
		}

		function display() {
			jsg.clearColor();
			startGame();
			//firstScreen();
		}

		function Bol(size, color, id) {
			this.x = 0.0;
			this.id = id;
			this.y = 0.0;
			this.v0 = 0.0;
			this.v = 0;
			this.color = [0, 0, 0];	
			this.style = "";
			this.size = size;
			this.time = 0;
			var shapes = [jsg2d.fillCircle, jsg2d.drawRect, jsg2d.fillRect];
			var i = Math.round(Math.random() * 2);					
			this.shape = shapes[i];

			this.setColor = function(R, G, B) {
				this.color[0] = R;
				this.color[1] = G;
				this.color[2] = B;
				this.style = "rgb(" + this.color[0] + ", " + this.color[1] + ", " + this.color[2] + ")";
			}
	
			this.setColor(color[0], color[1], color[2]);

			this.update = function() {
				var y = this.y;
				this.y = y + this.v0 * this.time + gravity * this.time * this.time;
				this.color[0] = Math.round((h-this.y)/h * 255);				
				if (this.y <= 0) {
					this.time = 0;
					this.setColor(Math.round(Math.random() * 256), Math.round(Math.random() * 256), Math.round(Math.random() * 256));

					this.x = Math.random() * jsg.canvas.width;
					this.y = h;
					this.v0 = -Math.random()*20;
				}
				this.time += step;
			}

			this.draw = function(){
				var style = this.style;
				jsg2d.save();
				jsg2d.context.fillStyle = style;
				jsg2d.context.style = style;	

				jsg2d.begin();
					this.shape(this.x, this.y, this.size, this.size);
				jsg2d.fill();
				jsg2d.end();
				jsg2d.restore();				
			}			
		}
	</script>
</head>
<body onload="init()">
    <div id="backgroundHolder">	
	<canvas id="banner" width="800" height="600"> </canvas>	
    </div>
    <div id="realbody">
    <header>
    </header>
    <div class="nav-total">
	<nav>
		<ul>
			<li><a href="http://gilzamir.github.io/jsg/index.html" title="Home">Home</a></li>
			<li><a href="#" title="Manual">Documenta&ccedil;&atilde;o</a></li>
			<li><a href="#" title="Github">Download</a></li>
			<div class="clear"></div>
		</ul>
	</nav> 
	<div class="clear"></div>
	</div>
	<section id="pagina-total">
		<div class="borda"> 
			<article id="artigo1"> 
				<div class="fundo-linha">
					<div class="artigos"> 
						<h2>JavaScript Graphics</h2>
						<figure><img src="logo.png"> </figure>
						<p align="justify">JavaScript Graphics (JSG) &eacute; uma API (<i>Application Programming Interface</i>) para o desenvolvimento de gr&aacute;ficos tridimensionais (3D) em JavaScript e HTML5 com WebGL JSG abstrai a complexidade de desenvolvimento de aplica&ccedil;&otilde;es que usam gr&aacute;ficos 3D com WebGL por meio de abstra&ccedil;&otilde;es bem estabelecidas.
					</div> 
				</div> 
			</article> 
			<article id="artigo2"> 
				<div class="fundo-linha" style="height:200px;">
					<div class="artigos" style="height:200px;"> 
						<h2>Exemplos</h2>
						<nav>
							<ul>
								<li><a  href="http://gilzamir.github.io/jsg/exemplocomwebgl4.html" title="Material"><img src="prod1.png"></a></li>
								<li><a href="http://gilzamir.github.io/jsg/exemplocomwebgl3.html" title="Luzes"><img src="prod2.png"></a></li>
								<li><a href="http://gilzamir.github.io/jsg/exemplocomwebgl.html" title="Objetos"><img src="prod3.png"></a></li>
								<li><a href="http://gilzamir.github.io/jsg/testecannon.html" title="Integra&ccedil;&atilde;o com a Physical Engine Cannon.js"><img width="120" height="120" src="prod4.png"></a></li>
								<div class="clear"></div>
							</ul>
						</nav> 					
					</div> 
				</div> 
			</article> 
		</div> 
	</section>
	<div id="rodape-total">
		<footer>
			<small class="copy">Copyright (C) 2013 Glol</small>
		</footer>
	</div>
</div>
</body>
</html>

